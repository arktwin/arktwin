@startuml messaging
skinparam defaultTextAlignment center

frame "Remote Network" {
  node "ArkTwin Center\n<color:#gray><plain>(Pekko cluster)</plain></color>" {
    agent "<color:#gray>Conductor</color>" as Conductor

    agent "Atlas" as Atlas
    collections "Atlas/\nChartRecorder" as ChartRecorder
    collections "Atlas/\n<b>ChartRouter</b>\nwhich routes\nculled agent transforms" as ChartRouter

    agent "<b>Clock</b>\nwhich delivers\nbase time matching" as ClockC
    agent "<color:#gray>Reporter</color>" as ReporterC
    agent "<b>Register</b>\nwhich delivers\n all agent infomation" as RegisterC

    storage "Kamon" as KamonC
    agent "CenterReporter" as CenterReporter
    
    rectangle "gRPC Services" as center.services {
      interface "Admin" as AdminService
      interface "Chart" as ChartService
      interface "Clock" as ClockService
      interface "<color:#gray>Reporter</color>" as ReporterService
      interface "Register" as RegisterService
    }
    rectangle "Prometheus\nExporter" as center.prometheus {
      interface "/metrics" as CenterMetrics
    }
  }

  rectangle " " as prometheus {
    node "Prometheus" as Prometheus
    node "Prometheus\nPushgateway" as Pushgateway
  }
}

frame "Local Network<plain>, which can deny inbound connections</plain>" {
  node "ArkTwin Edge\n<plain>(agent simulator sidecar)</plain>" {
    rectangle "gRPC Clients" as edge.clients {
      interface "Admin" as AdminClient
      interface "Chart" as ChartClient
      interface "Clock" as ClockClient
      interface "<color:#gray>Reporter</color>" as ReporterClient
      interface "Register" as RegisterClient
    }

    storage "Kamon" as Kamon
    agent "EdgeReporter" as EdgeReporter

    rectangle " " as edge.actors {
      agent "Chart" as Chart
      agent "Clock" as Clock
      agent "Register" as Register

      agent " " as EdgeAgentsPutAdapter
      agent " " as EdgeNeighborsQueryAdapter
    }

    agent "EdgeConfigurator" as EdgeConfigurator

    rectangle "REST API" as edge.endpoints {
      rectangle "/api/center" {
        interface "DELETE\n/agents" as CenterAgentsDelete
        interface "PUT\n/clock/speed" as CenterClockSpeedPut
      }
      rectangle "/api/edge\n" {
        interface "<color:#gray>DELETE</color>\n<color:#gray>/agents</color>" as EdgeAgentsDelete
        interface "POST\n/agents" as EdgeAgentsPost
        interface "PUT\n/agents" as EdgeAgentsPut
        interface "GET\n/config" as EdgeConfigGet
        interface "PUT\n/config/*" as EdgeConfigPut
        interface "POST\n/nighbors/_query" as EdgeNeighborsQuery
        interface "<color:#gray>POST</color>\n<color:#gray>/_tick</color>" as EdgeTick
      }
    }
    rectangle "Prometheus\nExporter" as edge.prometheus {
      interface "/metrics" as EdgeMetrics
    }
  }

  rectangle "Web UI" as webui {
    rectangle "/docs" {
      rectangle "Swagger"
    }
  }
  node "<b>Agent Simulator / VR</b>\nwhich can push and pull data synchronously" as Simulator
}

Conductor -[#gray]-> ClockC
Conductor -[#gray]-> RegisterC
Conductor <-[#gray]- ReporterC
Conductor <-[#gray]- ChartRecorder

ChartRouter <---> ChartService
ChartRecorder <--- ChartService
Atlas <--o ChartRecorder
Atlas --> ChartRouter

ClockC <--- AdminService
ClockC ---> ClockService
ReporterC <-[#gray]-- ReporterService
RegisterC <--- AdminService
RegisterC <---> RegisterService
RegisterC <-[#gray] ChartRecorder

AdminService <--> AdminClient
ChartService <--> ChartClient
ClockService --> ClockClient
ReporterService <-[#gray]- ReporterClient
RegisterService <--> RegisterClient

ReporterClient <-[#gray]- EdgeReporter

ChartClient ---> Chart

ClockClient ---> Clock

RegisterClient ---> Register

AdminClient <-- CenterAgentsDelete

AdminClient <-- CenterClockSpeedPut

RegisterClient <-[#gray]- EdgeAgentsDelete

RegisterClient <-- EdgeAgentsPost
ChartClient <-- EdgeAgentsPutAdapter
Chart <-- EdgeAgentsPutAdapter
Clock o--> EdgeAgentsPutAdapter
RegisterClient <-- EdgeAgentsPutAdapter
EdgeAgentsPutAdapter <-- EdgeAgentsPut
EdgeAgentsPutAdapter <-[#gray]-> EdgeTick

Chart o--> EdgeNeighborsQueryAdapter
Clock o--> EdgeNeighborsQueryAdapter
Register o--> EdgeNeighborsQueryAdapter
EdgeNeighborsQueryAdapter o--> EdgeNeighborsQuery
EdgeNeighborsQueryAdapter o-[#gray]-> EdgeTick

EdgeConfigurator o--> EdgeConfigGet
EdgeConfigurator <-- EdgeConfigPut
edge.actors <-- EdgeConfigurator  

edge.endpoints <-- webui
edge.endpoints o--> webui
edge.endpoints <-- Simulator
edge.endpoints o--> Simulator

KamonC --> CenterReporter
CenterReporter -[#gray]-> Conductor
KamonC o--> CenterMetrics
CenterMetrics o..> Prometheus
KamonC ..> Pushgateway

Kamon --> EdgeReporter
Kamon o--> EdgeMetrics
EdgeMetrics o..> Prometheus
Kamon ..> Pushgateway

Pushgateway o.> Prometheus

!procedure $inlineArrow($arrow)
{{\nleft to right direction\nlabel " " as A\nlabel " " as B\nA $arrow B\n}}
!endprocedure

legend
{{
  map "arrows legend " as arrows {
    $inlineArrow( "-->") => push
    $inlineArrow("o-->") => pull
  }
}}
endlegend
@enduml
