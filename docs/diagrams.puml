@startuml messaging
skinparam defaultTextAlignment center

frame "Remote Network" {
  node "ArkTwin Center" {
    agent "<color:#gray>Conductor</color>" as Conductor

    agent "Atlas" as Atlas
    collections "ChartRecorder" as ChartRecorder
    collections "Chart" as center.Chart

    agent "Clock" as center.Clock
    agent "<color:#gray>Reporter</color>" as Reporter
    agent "Register" as center.Register

    storage "Kamon" as center.Kamon
    agent "CenterKamon" as CenterKamon
    agent "CenterReporter" as CenterReporter
    agent "DeadLetterListener" as center.DeadLetterListener

    rectangle "gRPC Services" as center.services {
      interface "Admin" as AdminService
      interface "Chart" as ChartService
      interface "Clock" as ClockService
      interface "<color:#gray>Reporter</color>" as ReporterService
      interface "Register" as RegisterService
    }
    rectangle "Prometheus\nExporter" as center.prometheus {
      interface "/metrics" as CenterMetrics
    }
  }

  rectangle " " as prometheus {
    node "Prometheus" as Prometheus
    node "Prometheus\nPushgateway" as Pushgateway
  }
}

frame "Local Network<plain>, which can deny inbound connections</plain>" {
  node "ArkTwin Edge" {
    rectangle "gRPC Clients" as edge.clients {
      interface "Admin" as AdminClient
      interface "Chart" as ChartClient
      interface "Clock" as ClockClient
      interface "<color:#gray>Reporter</color>" as ReporterClient
      interface "Register" as RegisterClient
    }

    storage "Kamon" as Kamon
    agent "EdgeKamon" as EdgeKamon
    agent "EdgeReporter" as EdgeReporter
    agent "DeadLetterListener" as DeadLetterListener

    rectangle " " as edge.actors {
      agent "Chart" as Chart
      agent "Clock" as Clock
      agent "Register" as Register

      agent " " as EdgeAgentsPutAdapter
      agent " " as EdgeNeighborsQueryAdapter
    }

    agent "EdgeConfigurator" as EdgeConfigurator

    rectangle "REST API" as edge.endpoints {
      rectangle "/api/center" {
        interface "DELETE\n/agents" as CenterAgentsDelete
        interface "PUT\n/clock/speed" as CenterClockSpeedPut
      }
      rectangle "/api/edge\n" {
        interface "<color:#gray>DELETE</color>\n<color:#gray>/agents</color>" as EdgeAgentsDelete
        interface "POST\n/agents" as EdgeAgentsPost
        interface "PUT\n/agents" as EdgeAgentsPut
        interface "GET\n/config" as EdgeConfigGet
        interface "PUT\n/config/*" as EdgeConfigPut
        interface "POST\n/nighbors/_query" as EdgeNeighborsQuery
        interface "<color:#gray>POST</color>\n<color:#gray>/_tick</color>" as EdgeTick
      }
    }
    rectangle "Prometheus\nExporter" as edge.prometheus {
      interface "/metrics" as EdgeMetrics
    }
  }

  rectangle "Web UI" as webui {
    rectangle "/docs" {
      rectangle "Swagger"
    }
  }
  node "<b>Agent Simulator / VR</b>\nwhich can push and pull data synchronously" as Simulator
}

Conductor -[#gray]-> center.Clock
Conductor -[#gray]-> center.Register
Conductor <-[#gray]- Reporter
Conductor <-[#gray]-o ChartRecorder

center.Chart <---> ChartService
ChartRecorder <--- ChartService
Atlas <--o ChartRecorder
Atlas --> center.Chart

center.Clock <--- AdminService
center.Clock ---> ClockService
Reporter <-[#gray]-- ReporterService
center.Register <--- AdminService
center.Register <---> RegisterService

AdminService <--> AdminClient
ChartService <--> ChartClient
ClockService --> ClockClient
ReporterService <-[#gray]- ReporterClient
RegisterService <--> RegisterClient

ReporterClient <-[#gray]- EdgeReporter

ChartClient ---> Chart

ClockClient ---> Clock

RegisterClient ---> Register

AdminClient <-- CenterAgentsDelete

AdminClient <-- CenterClockSpeedPut

RegisterClient <-[#gray]- EdgeAgentsDelete

RegisterClient <-- EdgeAgentsPost
ChartClient <-- EdgeAgentsPutAdapter
Chart <-- EdgeAgentsPutAdapter
Clock o--> EdgeAgentsPutAdapter
RegisterClient <-- EdgeAgentsPutAdapter
EdgeAgentsPutAdapter <-- EdgeAgentsPut
EdgeAgentsPutAdapter <-[#gray]-> EdgeTick

Chart o--> EdgeNeighborsQueryAdapter
Clock o--> EdgeNeighborsQueryAdapter
Register o--> EdgeNeighborsQueryAdapter
EdgeNeighborsQueryAdapter o--> EdgeNeighborsQuery
EdgeNeighborsQueryAdapter o-[#gray]-> EdgeTick

EdgeConfigurator o--> EdgeConfigGet
EdgeConfigurator <-- EdgeConfigPut
edge.actors <-- EdgeConfigurator  

edge.endpoints <-- webui
edge.endpoints o--> webui
edge.endpoints <-- Simulator
edge.endpoints o--> Simulator

center.Kamon --> CenterReporter
CenterReporter -[#gray]-> Conductor
center.Kamon o--> CenterMetrics
CenterMetrics o..> Prometheus
center.Kamon ..> Pushgateway
center.DeadLetterListener -> CenterKamon
CenterKamon -> center.Kamon

Kamon --> EdgeReporter
Kamon o--> EdgeMetrics
EdgeMetrics o..> Prometheus
Kamon ..> Pushgateway
DeadLetterListener -> EdgeKamon
EdgeKamon -> Kamon

Pushgateway o.> Prometheus

!procedure $inlineArrow($arrow)
{{\nleft to right direction\nlabel " " as A\nlabel " " as B\nA $arrow B\n}}
!endprocedure

legend
{{
  map "arrows legend " as arrows {
    $inlineArrow( "-->") => push
    $inlineArrow("o-->") => pull
  }
}}
endlegend
@enduml
